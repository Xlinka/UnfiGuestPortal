version: '3.8'

services:
  # Application frontend and backend
  unifi-guest-panel-app:
    build: .
    container_name: unifi-guest-panel-app
    restart: unless-stopped
    ports:
      - "3881:3881"
    depends_on:
      - unifi-guest-panel-mongo
    environment:
      - NODE_ENV=development
      - PORT=3881
      - MONGODB_URI=mongodb://unifi-guest-panel-mongo:27017/unifi-guest-portal
      - JWT_SECRET=${JWT_SECRET:-defaultsecretkey123456789}
      - JWT_EXPIRES_IN=24h
      - UNIFI_CONTROLLER_URL=${UNIFI_CONTROLLER_URL:-https://unifi.local}
      - UNIFI_CONTROLLER_PORT=${UNIFI_CONTROLLER_PORT:-8443}
      - UNIFI_USERNAME=${UNIFI_USERNAME:-admin}
      - UNIFI_PASSWORD=${UNIFI_PASSWORD:-password}
      - UNIFI_SITE=${UNIFI_SITE:-default}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_default}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_default}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_default}
      - REACT_APP_API_URL=http://localhost:3881/api
      - REACT_APP_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_default}
    volumes:
      - ./logs:/usr/src/app/logs
    networks:
      - unifi-guest-panel-network

  # MongoDB database
  unifi-guest-panel-mongo:
    image: mongo:latest
    container_name: unifi-guest-panel-mongo
    restart: unless-stopped
    volumes:
      - unifi-guest-panel-mongodb-data:/data/db
    ports:
      - "27118:27017"
    networks:
      - unifi-guest-panel-network

  # Nginx for reverse proxy (HTTP only for development)
  unifi-guest-panel-nginx:
    image: nginx:alpine
    container_name: unifi-guest-panel-nginx
    restart: unless-stopped
    ports:
      - "3883:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - unifi-guest-panel-app
    networks:
      - unifi-guest-panel-network

# Persistent volumes
volumes:
  unifi-guest-panel-mongodb-data:
    driver: local

# Network for isolation
networks:
  unifi-guest-panel-network:
    driver: bridge
